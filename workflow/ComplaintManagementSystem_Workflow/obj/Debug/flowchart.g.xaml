<?xml version="1.0" encoding="utf-8"?>
<local:flowchart xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:local="clr-namespace:ComplaintManagementSystem_Workflow;assembly=ComplaintManagementSystem_Workflow" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>ComplaintManagementSystem_Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <local:flowchart.Implementation>
    <StateMachine>
      <StateMachine.InitialState>
        <State x:Name="__ReferenceID0" DisplayName="PromptMaker">
          <State.Entry>
            <Sequence>
              <local:PromptAtMaker RequiredDocument="ProvidedDoc" Text="Please upload document">
                <local:PromptAtMaker.Result>
                  <OutArgument x:TypeArguments="x:String">
                    <mca:CSharpReference x:TypeArguments="x:String">ProvidedDocument</mca:CSharpReference>
                  </OutArgument>
                </local:PromptAtMaker.Result>
                <local:PromptAtMaker.rejectionComments>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">CommentAll</mca:CSharpValue>
                  </InArgument>
                </local:PromptAtMaker.rejectionComments>
              </local:PromptAtMaker>
              <Assign>
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">
                    <mca:CSharpReference x:TypeArguments="x:String">CommentAll</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">null</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <If>
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean">!String.IsNullOrEmpty(CommentAll)</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <WriteLine>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String">"Rejection Reason:" + CommentAll</mca:CSharpValue>
                    </InArgument>
                  </WriteLine>
                </If.Then>
              </If>
            </Sequence>
          </State.Entry>
          <State.Transitions>
            <Transition DisplayName="Send Documents to Checker" Condition="True">
              <Transition.To>
                <State x:Name="__ReferenceID1" DisplayName="Checker">
                  <State.Entry>
                    <Sequence>
                      <local:ApproveAtChecker>
                        <local:ApproveAtChecker.ProvidedDocument>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">ProvidedDocument</mca:CSharpValue>
                          </InArgument>
                        </local:ApproveAtChecker.ProvidedDocument>
                        <local:ApproveAtChecker.isApprovedAtChecker>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpReference x:TypeArguments="x:Boolean">isApprovedAtChecker</mca:CSharpReference>
                          </OutArgument>
                        </local:ApproveAtChecker.isApprovedAtChecker>
                        <local:ApproveAtChecker.rejectionComments>
                          <OutArgument x:TypeArguments="x:String">
                            <mca:CSharpReference x:TypeArguments="x:String">CommentAll</mca:CSharpReference>
                          </OutArgument>
                        </local:ApproveAtChecker.rejectionComments>
                      </local:ApproveAtChecker>
                      <If>
                        <If.Condition>
                          <InArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpValue x:TypeArguments="x:Boolean">!String.IsNullOrEmpty(CommentAll)</mca:CSharpValue>
                          </InArgument>
                        </If.Condition>
                        <If.Then>
                          <WriteLine>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">"Rejection Reason:" + CommentAll</mca:CSharpValue>
                            </InArgument>
                          </WriteLine>
                        </If.Then>
                      </If>
                    </Sequence>
                  </State.Entry>
                  <State.Transitions>
                    <Transition DisplayName="Documents Rejected" To="{x:Reference __ReferenceID0}">
                      <Transition.Condition>
                        <mca:CSharpValue x:TypeArguments="x:Boolean">!isApprovedAtChecker</mca:CSharpValue>
                      </Transition.Condition>
                    </Transition>
                    <Transition DisplayName="Approved Documents from checker">
                      <Transition.Condition>
                        <mca:CSharpValue x:TypeArguments="x:Boolean">isApprovedAtChecker</mca:CSharpValue>
                      </Transition.Condition>
                      <Transition.To>
                        <State x:Name="__ReferenceID2" DisplayName="MakerCentral">
                          <State.Entry>
                            <Sequence>
                              <local:ApproveAtMakerCentral>
                                <local:ApproveAtMakerCentral.ProvidedDocument>
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String">ProvidedDocument</mca:CSharpValue>
                                  </InArgument>
                                </local:ApproveAtMakerCentral.ProvidedDocument>
                                <local:ApproveAtMakerCentral.isApproveAtMakerCentral>
                                  <OutArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpReference x:TypeArguments="x:Boolean">isApprovedAtMakerCentral</mca:CSharpReference>
                                  </OutArgument>
                                </local:ApproveAtMakerCentral.isApproveAtMakerCentral>
                                <local:ApproveAtMakerCentral.rejectionComments>
                                  <OutArgument x:TypeArguments="x:String">
                                    <mca:CSharpReference x:TypeArguments="x:String">CommentAll</mca:CSharpReference>
                                  </OutArgument>
                                </local:ApproveAtMakerCentral.rejectionComments>
                                <local:ApproveAtMakerCentral.sendBackToMaker>
                                  <OutArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpReference x:TypeArguments="x:Boolean">sendBackToMaker</mca:CSharpReference>
                                  </OutArgument>
                                </local:ApproveAtMakerCentral.sendBackToMaker>
                              </local:ApproveAtMakerCentral>
                              <If>
                                <If.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <mca:CSharpValue x:TypeArguments="x:Boolean">!string.IsNullOrEmpty(CommentAll)</mca:CSharpValue>
                                  </InArgument>
                                </If.Condition>
                                <If.Then>
                                  <WriteLine>
                                    <InArgument x:TypeArguments="x:String">
                                      <mca:CSharpValue x:TypeArguments="x:String">"Rejection Reason:"+ CommentAll</mca:CSharpValue>
                                    </InArgument>
                                  </WriteLine>
                                </If.Then>
                              </If>
                            </Sequence>
                          </State.Entry>
                          <State.Transitions>
                            <Transition DisplayName="Reject Documents and send back to checker" To="{x:Reference __ReferenceID1}">
                              <Transition.Condition>
                                <mca:CSharpValue x:TypeArguments="x:Boolean">!isApprovedAtMakerCentral &amp;&amp; !sendBackToMaker</mca:CSharpValue>
                              </Transition.Condition>
                            </Transition>
                            <Transition DisplayName="Approved Documents from Maker Central">
                              <Transition.Condition>
                                <mca:CSharpValue x:TypeArguments="x:Boolean">isApprovedAtMakerCentral &amp;&amp; !sendBackToMaker</mca:CSharpValue>
                              </Transition.Condition>
                              <Transition.To>
                                <State x:Name="__ReferenceID3" DisplayName="CheckerCentral">
                                  <State.Entry>
                                    <Sequence>
                                      <local:ApproveAtCheckerCentral>
                                        <local:ApproveAtCheckerCentral.ProvidedDocument>
                                          <InArgument x:TypeArguments="x:String">
                                            <mca:CSharpValue x:TypeArguments="x:String">ProvidedDocument</mca:CSharpValue>
                                          </InArgument>
                                        </local:ApproveAtCheckerCentral.ProvidedDocument>
                                        <local:ApproveAtCheckerCentral.isApprovedAtCheckerCentral>
                                          <OutArgument x:TypeArguments="x:Boolean">
                                            <mca:CSharpReference x:TypeArguments="x:Boolean">isApprovedAtCheckerCentral</mca:CSharpReference>
                                          </OutArgument>
                                        </local:ApproveAtCheckerCentral.isApprovedAtCheckerCentral>
                                        <local:ApproveAtCheckerCentral.rejectionComments>
                                          <OutArgument x:TypeArguments="x:String">
                                            <mca:CSharpReference x:TypeArguments="x:String">CommentAll</mca:CSharpReference>
                                          </OutArgument>
                                        </local:ApproveAtCheckerCentral.rejectionComments>
                                        <local:ApproveAtCheckerCentral.sendBackToChecker>
                                          <OutArgument x:TypeArguments="x:Boolean">
                                            <mca:CSharpReference x:TypeArguments="x:Boolean">sendBackToChecker</mca:CSharpReference>
                                          </OutArgument>
                                        </local:ApproveAtCheckerCentral.sendBackToChecker>
                                      </local:ApproveAtCheckerCentral>
                                      <If>
                                        <If.Condition>
                                          <InArgument x:TypeArguments="x:Boolean">
                                            <mca:CSharpValue x:TypeArguments="x:Boolean">!String.IsNullOrEmpty(CommentAll)</mca:CSharpValue>
                                          </InArgument>
                                        </If.Condition>
                                        <If.Then>
                                          <WriteLine>
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String">"Rejection Reason" + CommentAll</mca:CSharpValue>
                                            </InArgument>
                                          </WriteLine>
                                        </If.Then>
                                      </If>
                                    </Sequence>
                                  </State.Entry>
                                  <State.Transitions>
                                    <Transition DisplayName="Reject Document and send back to maker central" To="{x:Reference __ReferenceID2}">
                                      <Transition.Condition>
                                        <mca:CSharpValue x:TypeArguments="x:Boolean">!isApprovedAtCheckerCentral &amp;&amp; !sendBackToChecker</mca:CSharpValue>
                                      </Transition.Condition>
                                    </Transition>
                                    <Transition DisplayName="Reject Documents and send back to Checker" To="{x:Reference __ReferenceID1}">
                                      <Transition.Condition>
                                        <mca:CSharpValue x:TypeArguments="x:Boolean">!isApprovedAtCheckerCentral &amp;&amp; sendBackToChecker</mca:CSharpValue>
                                      </Transition.Condition>
                                    </Transition>
                                    <Transition DisplayName="Approved Documents from 2nd level QC ">
                                      <Transition.Condition>
                                        <mca:CSharpValue x:TypeArguments="x:Boolean">isApprovedAtCheckerCentral &amp;&amp; !sendBackToChecker</mca:CSharpValue>
                                      </Transition.Condition>
                                      <Transition.To>
                                        <State x:Name="__ReferenceID4" DisplayName="SecondLevelQC">
                                          <State.Entry>
                                            <Sequence>
                                              <local:ApproveAtSecondLevelQC>
                                                <local:ApproveAtSecondLevelQC.ProvidedDocument>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <mca:CSharpValue x:TypeArguments="x:String">ProvidedDocument</mca:CSharpValue>
                                                  </InArgument>
                                                </local:ApproveAtSecondLevelQC.ProvidedDocument>
                                                <local:ApproveAtSecondLevelQC.isFinallyApproved>
                                                  <OutArgument x:TypeArguments="x:Boolean">
                                                    <mca:CSharpReference x:TypeArguments="x:Boolean">isFinallyApproved</mca:CSharpReference>
                                                  </OutArgument>
                                                </local:ApproveAtSecondLevelQC.isFinallyApproved>
                                                <local:ApproveAtSecondLevelQC.rejectionComments>
                                                  <OutArgument x:TypeArguments="x:String">
                                                    <mca:CSharpReference x:TypeArguments="x:String">CommentAll</mca:CSharpReference>
                                                  </OutArgument>
                                                </local:ApproveAtSecondLevelQC.rejectionComments>
                                                <local:ApproveAtSecondLevelQC.sendBackToChecker>
                                                  <OutArgument x:TypeArguments="x:Boolean">
                                                    <mca:CSharpReference x:TypeArguments="x:Boolean">sendBackToChecker</mca:CSharpReference>
                                                  </OutArgument>
                                                </local:ApproveAtSecondLevelQC.sendBackToChecker>
                                                <local:ApproveAtSecondLevelQC.sendBackToMaker>
                                                  <OutArgument x:TypeArguments="x:Boolean">
                                                    <mca:CSharpReference x:TypeArguments="x:Boolean">sendBackToMaker</mca:CSharpReference>
                                                  </OutArgument>
                                                </local:ApproveAtSecondLevelQC.sendBackToMaker>
                                              </local:ApproveAtSecondLevelQC>
                                              <If>
                                                <If.Condition>
                                                  <InArgument x:TypeArguments="x:Boolean">
                                                    <mca:CSharpValue x:TypeArguments="x:Boolean">!String.IsNullOrEmpty(CommentAll)</mca:CSharpValue>
                                                  </InArgument>
                                                </If.Condition>
                                                <If.Then>
                                                  <WriteLine>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <mca:CSharpValue x:TypeArguments="x:String">"Rejection Reason:" + CommentAll</mca:CSharpValue>
                                                    </InArgument>
                                                  </WriteLine>
                                                </If.Then>
                                              </If>
                                            </Sequence>
                                          </State.Entry>
                                          <State.Transitions>
                                            <Transition DisplayName="Reject Document and send back to Checker Central" To="{x:Reference __ReferenceID3}">
                                              <Transition.Condition>
                                                <mca:CSharpValue x:TypeArguments="x:Boolean">!isFinallyApproved &amp;&amp; !sendBackToMaker &amp;&amp; !sendBackToChecker</mca:CSharpValue>
                                              </Transition.Condition>
                                            </Transition>
                                            <Transition DisplayName="Reject Document and send back to Checker" To="{x:Reference __ReferenceID1}">
                                              <Transition.Condition>
                                                <mca:CSharpValue x:TypeArguments="x:Boolean">!isFinallyApproved &amp;&amp; !sendBackToMaker &amp;&amp; sendBackToChecker</mca:CSharpValue>
                                              </Transition.Condition>
                                            </Transition>
                                            <Transition DisplayName="Application Approved Successfully">
                                              <Transition.Condition>
                                                <mca:CSharpValue x:TypeArguments="x:Boolean">isFinallyApproved &amp;&amp; !sendBackToMaker &amp;&amp; !sendBackToChecker</mca:CSharpValue>
                                              </Transition.Condition>
                                              <Transition.To>
                                                <State x:Name="__ReferenceID5" DisplayName="FinalState" IsFinal="True" />
                                              </Transition.To>
                                            </Transition>
                                            <Transition DisplayName="Send back to maker" To="{x:Reference __ReferenceID0}">
                                              <Transition.Condition>
                                                <mca:CSharpValue x:TypeArguments="x:Boolean">!isFinallyApproved &amp;&amp; sendBackToMaker &amp;&amp; !sendBackToChecker</mca:CSharpValue>
                                              </Transition.Condition>
                                            </Transition>
                                          </State.Transitions>
                                          <State.Variables>
                                            <Variable x:TypeArguments="x:Boolean" Name="sendBackToMaker" />
                                            <Variable x:TypeArguments="x:Boolean" Name="sendBackToChecker" />
                                          </State.Variables>
                                        </State>
                                      </Transition.To>
                                    </Transition>
                                  </State.Transitions>
                                  <State.Variables>
                                    <Variable x:TypeArguments="x:Boolean" Name="sendBackToChecker" />
                                  </State.Variables>
                                </State>
                              </Transition.To>
                            </Transition>
                            <Transition DisplayName="Reject Document and send back to Maker  - branch" To="{x:Reference __ReferenceID0}">
                              <Transition.Condition>
                                <mca:CSharpValue x:TypeArguments="x:Boolean">!isApprovedAtMakerCentral &amp;&amp; sendBackToMaker</mca:CSharpValue>
                              </Transition.Condition>
                            </Transition>
                          </State.Transitions>
                          <State.Variables>
                            <Variable x:TypeArguments="x:Boolean" Name="sendBackToMaker" />
                          </State.Variables>
                        </State>
                      </Transition.To>
                    </Transition>
                  </State.Transitions>
                </State>
              </Transition.To>
            </Transition>
          </State.Transitions>
        </State>
      </StateMachine.InitialState>
      <x:Reference>__ReferenceID0</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
      <x:Reference>__ReferenceID4</x:Reference>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID5</x:Reference>
      <StateMachine.Variables>
        <Variable x:TypeArguments="x:String" Name="ProvidedDocument" />
        <Variable x:TypeArguments="x:String" Name="CorrectDocument" />
        <Variable x:TypeArguments="x:Boolean" Name="isApprovedAtChecker" />
        <Variable x:TypeArguments="x:Boolean" Name="isApprovedAtMakerCentral" />
        <Variable x:TypeArguments="x:Boolean" Name="isFinallyApproved" />
        <Variable x:TypeArguments="x:Boolean" Name="isApprovedAtCheckerCentral" />
      </StateMachine.Variables>
      <sads:DebugSymbol.Symbol>9xBGqGHaQE4u7+IyQLTUYlN1X0M6XFVzZXJzXG5vdW1hbi5hbGlcRGVza3RvcFxXb3JrZmxvd1x3b3JrZmxvd1xDb21wbGFpbnRNYW5hZ2VtZW50U3lzdGVtX1dvcmtmbG93XGZsb3djaGFydC54YW1sSS8D8gISAgEBMQfhAg8DAdQDjgEX2QIfAwHhAsIBH80CJwMB7gH7ASfGAi8CAVhfD90CFwIBBLkCL7kCogECAQIzC1oWAwHYA115XX8DAdYDkAEbtQEmAwGIA7oBH7oBkwEDAfsCvwEfvwGSAQMB7wLSAh/SApIBAwHjAsQBI+kBLgMBlQLuASfuAZ8BAwGIAvMBJ/MBngEDAfwB+AEn+AGeAQMB8AH9ASunAjYDAY8BrAIvrAK6AQMBgQGxAi+xArkBAgF0tgIvtgK5AQIBZ74CL74CuQECAVphE4EBHgIBHYYBF4YBagIBEYsBF4sBaQIBBjQNPyMDAYgEQA1LFgMB8QNMDVkSAwHZA5EBHaYBOwMBowOnAR20ASIDAYkDxQEl2gFFAwGwAtsBJegBKgMBlgL+AS2YAkwDAawBmQItpgIyAwGQAWIVci4CATZzFYABGgIBHjR4NJABAwGgBDRlNHIDAZ8ENxM3aQMBlAQ8EzxbAwGJBEgTSFUDAf0DQxNDYwMB8gNPE09zAwHaA1MRVx0DAeUDmQEjmQGCAQMByAOUASOUAXEDAbwDowEjowF5AwGwA54BI54BcwMBpAOqASOqAYMBAwGKA64BIbIBLQMBlgPNASvNAYwBAwHVAsgBK8gBeQMByQLXASvXAYMBAwG9AtIBK9IBewMBsQLeASveAYsBAwGXAuIBKeYBNQMBowKGAjOGAosBAwHhAYECM4ECgQEDAdQBkAIzkAKLAQMBxwGVAjOVAokBAwG6AYsCM4sCgwEDAa0BnAIznAKTAQMBkQGgAjGkAj0DAZ4BahtqdQIBTWUbZWkCAUJvG29rAgE3dht2ewIBH3oZfiUCASpVFVVzAwHmA7ABJbABggEDAZcD5AEt5AGKAQMBpAKiAjWiApMBAwGfAXwdfHsCASs=</sads:DebugSymbol.Symbol>
    </StateMachine>
  </local:flowchart.Implementation>
</local:flowchart>